{"version":3,"sources":["app.js","controllers/filesystemController.js","controllers/formController.js","controllers/uploadController.js","controllers/youtubeController.js","directives/fileItem.js","services/filesFactory.js","services/filesystemFactory.js"],"names":[],"mappingsnvpIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjfile":"app.js","sourcesContent":["/**\n * Created by yjkwak on 15. 10. 15..\n */\nvar albumApp = angular.module(\"albumApp\", ['ngRoute', 'ngResource', 'ngFileUpload']);\nvar youtubeApp = angular.module(\"youtubeApp\", ['ngRoute', 'ngResource']);\n\n(function (angular, $) {\n    'use strict';\n\n    angular.module(\"albumApp\").config(AlbumAppConfig).run(AlbumAppRun);\n\n    AlbumAppConfig.$inject = ['$routeProvider'];\n\n    function AlbumAppConfig($routeProvider) {\n        var getView = function (viewName) {\n            return '/album.' + viewName + '.html';\n        };\n\n        $routeProvider\n            // route for the home page. href=\"#/\"\n            .when('/', {\n                templateUrl: 'home.index.html'\n            })\n            // route for the list page\n            .when('/album', {\n                templateUrl: getView('lists'),\n                controller: 'FilesystemController',\n                controllerAs: 'fsCtrl'\n            })\n            // route for the list page\n            .when('/album/:dir', {\n                templateUrl: getView('lists'),\n                controller: 'FilesystemController',\n                controllerAs: 'fsCtrl'\n            })\n            .otherwise({\n                redirectTo: '/'\n            });\n    }\n\n    AlbumAppRun.$inject = ['$rootScope', '$routeParams', '$http'];\n\n    function AlbumAppRun($rootScope, $routeParams, $http) {\n        $rootScope.host = (/^localhost/.test(location.host) || /^console\\.motorgraph\\.local/.test(location.host))? location.host : \"console.motorgraph.com\";\n        $rootScope.endpoint = location.protocol +\"//\"+ $rootScope.host +\"/api/album/v1/dirs\";\n        $rootScope.datas = {};\n        $rootScope.album = {\n            title: '',\n            description: ''\n        };\n\n        $rootScope.$on('$routeChangeSuccess', function(e, current, pre) {\n            var ol = [\n                {\n                    path: '/',\n                    name: 'Home'\n                }\n            ];\n            if (location.hash.match(/^#\\/album/)) {\n                ol.push({\n                    path: '#/album',\n                    name: 'Album'\n                });\n            }\n\n            var dir = $routeParams.dir;\n            var dirs = (typeof dir == 'undefined')? \"\" : dir.split('.');\n\n            var breadcrumb = \"\";\n            for(var i = 0; i < dirs.length; i++) {\n                var li = {\n                    path: '#/album/'+ breadcrumb + dirs[i],\n                    name: dirs[i]\n                };\n                ol.push(li);\n                breadcrumb += dirs[i] +\".\";\n            }\n\n            $rootScope.breadcrumbs = ol;\n        });\n\n        $rootScope.showMenu = function (id) {\n            angular.element(document.querySelector('[data-menu=\"' + id + '\"]').parentNode).toggleClass('is-visible');\n        };\n\n        $rootScope.toggleUploadModal = function () {\n            $('#uploadModal').modal('toggle');\n        };\n\n        $rootScope.createDir = function () {\n            $('#dirModal').modal('show');\n        };\n\n        $rootScope.openResult = function () {\n            var host = ($rootScope.host.match(/local/))? \"album.motorgraph.local\" : \"album.motorgraph.com\";\n            var dir = ($routeParams.dir).replace(/\\./g, '/');\n            var url = location.protocol +\"//\"+ host +\"/\"+ dir;\n\n            window.open(url);\n        };\n\n        $rootScope.rescan = function () {\n            var dir = $routeParams.dir;\n            var url = $rootScope.endpoint +\"/\"+ dir +\"/rescan\";\n\n            $http.get(url).then(\n                function (response) {\n                    if (response.data.success == false) return false;\n\n                    location.reload();\n                },\n                function (error) {\n                    console.error(error);\n                }\n            );\n        };\n\n        $rootScope.setupAlbum = function () {\n            var datas = $('.container .row[ng-view]').controller().datas;\n\n            if (datas.carousel) {\n                var dir = $routeParams.dir.replace(/\\./g, '/');\n                var url = \"/data/album/\" + dir + \"/manifest.json\";\n\n                $http.get(url).then(\n                    function (response) {\n                        if (typeof response.data.title != 'undefined') $rootScope.album.title = response.data.title;\n                        if (typeof response.data.description != 'undefined') $rootScope.album.description = response.data.description;\n                    }\n                );\n            }\n\n            $('#albumModal').modal('toggle');\n        };\n\n        $rootScope.createBanner = function () {\n            if ($rootScope.datas.length < 6) {\n                alert(\"필수 조건 : 이미지 6건\");\n                return false;\n            }\n\n            var dir = $routeParams.dir;\n            var url = $rootScope.endpoint +\"/\"+ dir +\"/banner\";\n            $http.get(url).then(\n                function (response) {\n                    if (response.data.success == false) {\n                        alert(response.data.reason);\n                        return false;\n                    }\n\n                    $rootScope.banner = {\n                        src: response.data.banner,\n                        href: response.data.href,\n                        alt: response.data.title\n                    };\n\n                    $rootScope.banner.src = $rootScope.banner.src.replace(/\\/\\/banner/, '/banner');\n\n                    $('#bannerModal').modal('show');\n                }\n            );\n        };\n    }\n})(window.angular, jQuery);","/**\n * Created by yjkwak on 15. 10. 15..\n */\n(function(angular) {\n    'use strict';\n\n    angular\n        .module('albumApp')\n        .controller('FilesystemController', FilesystemController);\n\n    FilesystemController.$inject = ['$scope', '$http', '$routeParams', 'FilesystemFactory', 'FilesFactory'];\n\n    /**\n     * @description 파일시스템 컨트롤\n     * @param $scope\n     * @param $http\n     * @constructor\n     */\n    function FilesystemController($scope, $http, $routeParams, FilesystemFactory, FilesFactory) {\n        $scope.absoluteDir = \"\";\n\n        var self = this;\n\n        self.datas = {};\n        self.dir = \"\";\n        self.from = \"\";\n\n        self.url = location.protocol +\"//\"+ $scope.host;\n\n        self.getDir = function () {\n            if (typeof $routeParams.dir != 'undefined') {\n                self.dir = $routeParams.dir;\n                $scope.absoluteDir = self.dir.replace(/\\./gi, '/');\n                FilesystemFactory.setRouteParams($routeParams);\n            }\n        };\n\n        self.editDir = function (index) {\n            // 레코드 행 로딩\n            var data = self.datas.dirs[index];\n            FilesystemFactory.setIndex(index);\n            // 모달창 컨트롤러 변수에 값 할당\n            var formController = angular.element(dirEditModal).controller();\n            formController.from_name = data.realname;\n            formController.from_title = data.title;\n            // 모달창 보이기\n            $('#dirEditModal').modal('show');\n        };\n\n        self.delDir = function (index) {\n            if (!confirm('주의! 하위 디렉토리까지 전부 삭제됩니다. Are you sure?')) return false;\n\n            var dir = self.datas.dirs[index].dirname;\n            if (!dir) dir = \".\";\n\n            var url = $scope.endpoint +'/'+ dir.replace(/\\//g, '.');\n\n            var data = {\n                index: index\n            };\n\n            $http({\n                method: 'DELETE',\n                url: url,\n                data: data\n            }).then(\n                function(response) {    // success\n                    if (response.data.success == false) {\n                        return false;\n                    }\n\n                    self.datas.dirs.splice(response.data.index, 1);\n                },\n                function (response) {   // error\n                    console.info(response);\n                }\n            );\n        };\n\n        self.editFile = function (index) {\n            alert('under construction');\n            return;\n\n            var file = self.datas.files[index];\n            var dir = file.dirname;\n            var fileName = file.basename;\n\n            if (!dir) dir = \".\";\n\n            var url = self.url;\n            url += '/files';\n\n            $http.patch(url, {\n                dir: dir,\n                file: fileName\n            }).then(\n                function(response) {    // success\n                    //TODO: when response successful then edit current element\n                    if (response.data.success) {\n                        //\n                    }\n                },\n                function (response) {   // error\n                    console.info(response);\n                }\n            );\n        };\n\n        self.delFile = function (index) {\n            if (!confirm('Are you sure?')) return false;\n\n            var file = self.datas.files[index];\n            var dir = (file.dirname)? file.dirname.replace(/^\\//, \"\").replace(/\\//g, \".\") : \"~\";\n            var fileName = file.basename;\n\n            FilesFactory.delete({ dir: dir, id: fileName, index: index })\n                .$promise.then(function (result) {\n                    if (result.success == false) {\n                        return false;\n                    }\n\n                    self.datas.files.splice(result.index, 1);\n                });\n        };\n\n        self.init = function () {\n            self.getDir();\n\n            FilesystemFactory.rest.get({dir: self.dir})\n                .$promise.then(function (datas) {\n                    if (typeof datas.success != 'undefined') {\n                        var ctrl = angular.element('.container .row').controller();\n                        ctrl.init();\n                    }\n\n                    self.datas = datas;\n                });\n        };\n\n        self.init();\n    }\n})(window.angular);","/**\n * @brief\n * @author Created by yjkwak\n * @date 15. 10. 22.\n * @description\n */\n(function(angular) {\n    'use strict';\n\n    angular\n        .module('albumApp')\n        .controller('FormController', FormController);\n\n    FormController.$inject = ['$scope', '$http', 'FilesystemFactory'];\n\n    /**\n     * @description 폼 컨트롤\n     * @param $scope\n     * @param $http\n     * @constructor\n     */\n    function FormController($scope, $http, FilesystemFactory) {\n        var self = this;\n\n        self.routeParams = {};\n        self.dir = \"\";\n\n        self.createDirSubmit = function (isValid) {\n            self.submitted = true;\n\n            if (!isValid) {\n                if (dirForm.dir_name.$error.required) {\n                    alert('폴더명을 입력하세요.');\n                }\n                if (dirForm.dir_title.$error.required) {\n                    alert('폴더 제목을 입력하세요.');\n                }\n                return false;\n            }\n\n            self.routeParams = FilesystemFactory.getRouteParams();\n            self.dir = self.routeParams.dir;\n\n            var data = {\n                pwd: self.dir,\n                realname: dirForm.dir_name.value,\n                title: dirForm.dir_title.value\n            };\n\n            var url = $scope.endpoint +\"/create\";\n\n            $http({\n                method: 'POST',\n                url: url,\n                data: data\n            }).then(\n                function (response) {   // success\n                    if (response.data.success == false) {\n                        return false;\n                    }\n\n                    var data = response.data.data;\n                    // Reference data list controller\n                    var fsController = angular.element('.container > .row').controller();\n                    fsController.datas.dirs.push(data);\n\n                    // Close modal dialog\n                    $('#dirModal').modal('hide');\n                    // Clear form\n                    dirForm.dir_title.value = \"\";\n                },\n                function (response) {   // error\n                    console.log(response);\n                }\n            );\n        };\n\n        self.editDirSubmit = function (isValid) {\n            if (!isValid) {\n                if (dirEditForm.to.$error.required) {\n                    alert('변경할 디렉토리명을 입력하세요.');\n                }\n                return false;\n            }\n\n            self.routeParams = FilesystemFactory.getRouteParams();\n            self.dir = self.routeParams.dir;\n\n            var data = {\n                index: FilesystemFactory.getIndex(),\n                name: dirEditForm.to_name.value,\n                title: dirEditForm.to_title.value\n            };\n\n            var url = $scope.endpoint +'/'+ (self.dir? self.dir : '') +'.'+ dirEditForm.from_name.value;\n\n            $http({\n                method: 'PATCH',\n                url: url,\n                data: data\n            }).then(\n                function(response) {    // success\n                    if (response.data.success == false) {\n                        var msg = response.data.reason || '처리중 오류 발생! 다시 시도하여 주십시오.';\n                        alert(msg);\n                        return false;\n                    }\n\n                    // Reference data list controller\n                    var row = angular.element('.container > .row').controller().datas.dirs[response.data.index];\n                    // Apply modified value\n                    row.realname = dirEditForm.to_name.value;\n                    row.title = dirEditForm.to_title.value;\n                    // Close dialog\n                    $('#dirEditModal').modal('hide');\n                    dirEditForm.to_name.value = \"\";\n                    dirEditForm.to_title.value = \"\";\n                    self.from_name = \"\";\n                    self.from_title = \"\";\n                },\n                function (response) {   // error\n                    console.info(response);\n                }\n            );\n        };\n\n        self.setupAlbumSubmit = function (isValid) {\n            if (!isValid) {\n                if (albumForm.title.$error.required) {\n                    alert('앨범제목을 입력하세요.');\n                }\n                return false;\n            }\n\n            self.routeParams = FilesystemFactory.getRouteParams();\n            self.dir = self.routeParams.dir;\n\n            var data = {\n                title: albumForm.title.value,\n                description: albumForm.description.value\n            };\n\n            var url = $scope.endpoint +\"/\"+ self.dir +\"/setup\";\n            $http({\n                method: 'POST',\n                url: url,\n                data: data\n            }).then(\n                function (response) {\n                    if (response.data.success == false) return false;\n\n                    // Close modal dialog\n                    $('#albumModal').modal('hide');\n\n                    $scope.album.title = albumForm.title.value;\n                    $scope.album.description = albumForm.description.value;\n\n                    // Clear form\n                    albumForm.title.value = \"\";\n                    albumForm.description.value = \"\";\n                },\n                function (error) {\n                    console.error(error);\n                }\n            );\n        };\n    }\n})(window.angular);","/**\n * @brief File Upload Controller\n * @author by yjkwak\n * @date 15. 10. 16..\n * @description https://github.com/danialfarid/ng-file-upload#usage\n */\n(function (angular) {\n    'use strict';\n\n    angular.module('albumApp')\n        .controller('UploadController', UploadController);\n\n    UploadController.$inject = ['$scope', 'Upload', '$routeParams', '$timeout', 'FilesystemFactory'];\n\n    function UploadController($scope, Upload, $routeParams, $timeout, FilesystemFactory) {\n        var vm = this;\n        vm.dir = $routeParams.dir;\n        vm.progress = {\n            percentage: 0,\n            msg: \"\"\n        };\n\n        vm.removeFile = function (index) {\n            $scope.files.splice(index, 1);\n        };\n\n        // 파일들 모델에 변경이 있을 경우\n        $scope.$watch('files', function () {\n            //$scope.upload($scope.files); // 파일 큐에 담은 뒤 submit 버튼 클릭시 submit() 통한 전송을 위해 주석처리해둠\n        });\n        // 파일 모델에 변경이 있을 경우\n        $scope.$watch('file', function () {\n            if ($scope.file != null) {\n                $scope.files = [$scope.file];\n            }\n        });\n\n        $scope.submit = function() {\n            var metas = [], meta = {};\n            for (var i = 0; i < $scope.files.length; i++) {\n                meta = {\n                    title : angular.element(uploadForm.file_title)[i].value,\n                    description : angular.element(uploadForm.file_description)[i].value\n                };\n                metas.push(meta);\n            }\n            $scope.upload($scope.files, metas);\n        };\n\n        $scope.upload = function(files, metas) {\n            angular.element('.upload-modal__progress').show();\n\n            if (files && files.length) {\n                var locationHash = (location.hash)? location.hash : \".\";\n                // send them all for HTML5 browsers\n                Upload.upload({\n                    url: '/api/album/v1/dirs/'+ locationHash,\n                    data: {\n                        dir: $routeParams.dir,\n                        files: files,\n                        metas: metas\n                    }\n                }).then(\n                    // file is uploaded successfully\n                    function (response) {\n                        if (response.data.success == false) {\n                            return false;\n                        }\n\n                        var data = response.data.files;\n                        // Reference data list controller\n                        var fsController = angular.element('.container > .row').controller();\n                        fsController.datas.files = fsController.datas.files.concat(data);\n\n                        // Clear the file queue\n                        $scope.files = [];\n\n                        // Reset the upload progress component\n                        angular.element('#uploadModal').modal('hide');\n                        vm.progress.percentage = 0;\n                        vm.progress.msg = \"\";\n                    },\n                    // handle error\n                    function (response) {\n                        console.error(response);\n                    },\n                    // progress notify\n                    function (evt) {\n                        vm.progress.percentage = parseInt(100.0 * evt.loaded / evt.total);\n                        //console.log('progress: ' + parseInt(100.0 * evt.loaded / evt.total) + '% file :'+ evt.config.data.file.name);\n                    }\n                );\n                /*// send them all of each for non HTML5 browsers\n                for (var i = 0; i < files.length; i++) {\n                    var file = files[i];\n                    var title = uploadForm.file_title[i];\n                    var description = uploadForm.file_description[i];\n\n                    if (!file.$error) {\n                        Upload.upload({\n                            url: location.host +'/album/api/v1/dirs/'+ location.hash,\n                            method: 'POST',\n                            file: file,\n                            sendFieldsAs: 'form',\n                            fields: {\n                                dir: vm.dir,\n                                title: title,\n                                description: description\n                            }\n                        }).then(\n                            function (data, status, headers, config) {\n                                $timeout(function() {\n                                    vm.log = 'file: ' + config.data.file.name + ', Response: ' + JSON.stringify(data) + '\\n' + vm.log;\n                                    console.log(vm.log);\n                                });\n                            },\n                            function (response) {\n                                console.log('Error status: '+ response.status);\n                            },\n                            function (evt) {\n                                var progressPercentage = parseInt(100.0 * evt.loaded / evt.total);\n                                vm.log = 'progress: '+ progressPercentage + '% '+ evt.conf.data.file.name +'\\n'+ vm.log;\n                                console.log(vm.log);\n                            }\n                        );\n                    }\n                }*/\n            } else {\n                console.log($scope.files);\n            }\n        }\n    }\n})(window.angular);","/**\n * @brief youtube controller\n * @author Created by yjkwak\n * @date 15. 11. 4.\n * @description\n */\n\n(function (angular, $) {\n    'use strict';\n\n    angular.module('youtubeApp')\n        .controller('YoutubeController', YoutubeController);\n\n    YoutubeController.$inject = ['$scope', '$http'];\n\n    function YoutubeController($scope, $http) {\n        var self = this;\n\n        var url = \"\";\n\n        /*$http.get(url, function (response) {\n\n        });*/\n    }\n})(window.angular, jQuery);","/**\n * @brief File (include Dir) List Item\n * @author Created by yjkwak\n * @date 15. 10. 24.\n * @description\n *  angular.module('albumApp', ['albumApp.directives.fileItem']) 로 include 후\n *  <FileItem></FileItem> 과 같이 사용\n *  디렉티브 기초 예제는 http://programmingsummaries.tistory.com/248 참고\n */\nangular.module('albumApp.directives.fileItem', [])\n    .directive('FileItem', FileItem);\n\nfunction FileItem() {\n    return {\n        // 선언 방식 E = <FileItem>\n        restrict: 'E',\n        // attr과 연결 <FileItem item=\"item\" item2=\"item2\" ...>\n        scope: {\n            item: '='\n        },\n        replace: true,\n        templateUrl: 'album.lists.html',\n        link: function (scope, elem, attrs) {\n            // <FileItem data-file-model=\"datas.files\">\n            // $scope.datas = ['dirs': {}, 'files': {}];\n            var dataModel = attrs.fileModel;\n\n            // 모델명을 HTML attribute로 입력했는지 체크\n            if (dataModel && angular.isObject(dataModel)) {\n                //\n            }\n\n            elem.click(function () {\n                console.log('albumApp.directives.fileItem directive clicked!');\n            });\n        }/*,\n        controller: function ($scope) {\n            console.log($scope.item);\n        }*/\n    }\n}","/**\n * @brief Files REST Factory\n * @author Created by yjkwak\n * @date 15. 10. 20.\n * @description\n */\n(function (angular) {\n    'use strict';\n\n    angular.module('albumApp')\n        .factory(\"FilesFactory\", FilesFactory);\n\n    FilesFactory.$inject = ['$resource'];\n\n    function FilesFactory($resource) {\n        return $resource(\"/api/album/v1/dirs/:dir/files/:id\");\n    }\n})(window.angular);","/**\n * @brief\n * @author Created by yjkwak\n * @date 15. 10. 22.\n * @description\n */\n(function(angular) {\n    'use strict';\n\n    angular.module('albumApp')\n        .factory('FilesystemFactory', FilesystemFactory);\n\n    FilesystemFactory.$inject = ['$resource'];\n\n    function FilesystemFactory($resource) {\n        var datas = {\n            carousel: false,\n            dirs: [],\n            files: []\n        };\n\n        var rest = $resource(\"/api/album/v1/dirs/:dir\");\n        var index = null;\n        var routeParams = {};\n        var title = \"\";\n        var from = \"\";\n        var to = \"\";\n\n        return {\n            datas: datas,\n            rest: rest,\n            getRouteParams: getRouteParams,\n            setRouteParams: setRouteParams,\n            getDatas: getDatas,\n            setDatas: setDatas,\n            getIndex: getIndex,\n            setIndex: setIndex,\n            getDir: getDir,\n            getFile: getFile,\n            addDir: addDir,\n            addFile: addFile,\n            delDir: delDir,\n            delFile: delFile,\n            setDir: setDir,\n            setFile: setFile\n        };\n\n        function getRouteParams() {\n            return routeParams;\n        }\n\n        function setRouteParams(params) {\n            routeParams = params;\n        }\n\n        function getDatas() {\n            return datas;\n        }\n\n        function setDatas(data) {\n            datas = data;\n        }\n\n        function getIndex() {\n            return index;\n        }\n\n        function setIndex(idx) {\n            index = idx;\n        }\n\n        function getDir(index) {\n            return datas.dirs[index];\n        }\n\n        function getFile(index) {\n            return datas.files[index];\n        }\n\n        function addDir(items) {\n            datas.dirs = datas.dirs.concat(items);\n        }\n\n        function addFile(items) {\n            datas.files = datas.files.concat(items);\n        }\n\n        function delDir(index) {\n            datas.dirs.splice(index, 1);\n        }\n\n        function delFile(index) {\n            datas.files.splice(index, 1);\n        }\n\n        function setDir(index, what, value) {\n            var row = getDir(index);\n            row[what] = value;\n        }\n\n        function setFile(index, what, value) {\n            var row = getFile(index);\n            row[what] = value;\n        }\n    }\n})(window.angular);"],"sourceRoot":"/source/"}